// <auto-generated />
using System;
using Hatogan.Application.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hatogan.Application.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hatogan.Domain.Entities.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ActualWeight")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<decimal>("BirthWeight")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("Breed")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<decimal>("IncomeWeight")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<short>("OriginId")
                        .HasColumnType("smallint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("SexId")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("SireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("StatusId")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DamId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("OriginId");

                    b.HasIndex("SexId");

                    b.HasIndex("SireId");

                    b.HasIndex("StatusId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("Hatogan.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Inactive = false,
                            Name = "Ternero"
                        },
                        new
                        {
                            Id = 2,
                            Inactive = false,
                            Name = "Novilla Destete"
                        },
                        new
                        {
                            Id = 3,
                            Inactive = false,
                            Name = "Maute Destete"
                        },
                        new
                        {
                            Id = 4,
                            Inactive = false,
                            Name = "Novilla de Levante"
                        },
                        new
                        {
                            Id = 5,
                            Inactive = false,
                            Name = "Maute de Levante"
                        },
                        new
                        {
                            Id = 6,
                            Inactive = false,
                            Name = "Novilla Vientre"
                        },
                        new
                        {
                            Id = 7,
                            Inactive = false,
                            Name = "Maute Ceba"
                        },
                        new
                        {
                            Id = 8,
                            Inactive = false,
                            Name = "Vaca"
                        },
                        new
                        {
                            Id = 9,
                            Inactive = false,
                            Name = "Toro"
                        });
                });

            modelBuilder.Entity("Hatogan.Domain.Entities.Origin", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"), 1L, 1);

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Origins");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Inactive = false,
                            Name = "Propio"
                        },
                        new
                        {
                            Id = (short)2,
                            Inactive = false,
                            Name = "Comprado"
                        });
                });

            modelBuilder.Entity("Hatogan.Domain.Entities.Sex", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"), 1L, 1);

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Sexs");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Inactive = false,
                            Name = "Hembra"
                        },
                        new
                        {
                            Id = (short)2,
                            Inactive = false,
                            Name = "Macho"
                        });
                });

            modelBuilder.Entity("Hatogan.Domain.Entities.Status", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"), 1L, 1);

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Inactive = false,
                            Name = "Activo"
                        },
                        new
                        {
                            Id = (short)2,
                            Inactive = false,
                            Name = "Enfermo"
                        },
                        new
                        {
                            Id = (short)3,
                            Inactive = false,
                            Name = "Muerto"
                        },
                        new
                        {
                            Id = (short)4,
                            Inactive = false,
                            Name = "Enfermo"
                        });
                });

            modelBuilder.Entity("Hatogan.Domain.Entities.Animal", b =>
                {
                    b.HasOne("Hatogan.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hatogan.Domain.Entities.Animal", "Dam")
                        .WithMany("DamPups")
                        .HasForeignKey("DamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hatogan.Domain.Entities.Origin", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hatogan.Domain.Entities.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hatogan.Domain.Entities.Animal", "Sire")
                        .WithMany("SirePups")
                        .HasForeignKey("SireId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hatogan.Domain.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Dam");

                    b.Navigation("Origin");

                    b.Navigation("Sex");

                    b.Navigation("Sire");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Hatogan.Domain.Entities.Animal", b =>
                {
                    b.Navigation("DamPups");

                    b.Navigation("SirePups");
                });
#pragma warning restore 612, 618
        }
    }
}
